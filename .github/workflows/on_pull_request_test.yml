# testing merge on the main branch after a pullrequest approval
name: Merge on Pull request 
on: 
  pull_request_target:
    branches: [ main ]
    
jobs:
  # Firts authenticate user based on PR details
  authenticate_user:
    runs-on: ubuntu-latest
    
    steps:    
      - name: dump info
        run: |
          echo ">>> Repo: ${{ github.repository }}"
          echo ">>> SrcPath: $GITHUB_WORKSPACE"
          echo ">>> Pull request number: ${{ github.event.pull_request.number }}"
          echo ">>> Git hub actor: ${{ github.actor }}"
          

      # Checkout the forecast repo
      - name: checkout repo
        uses: actions/checkout@v3
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      # Checkout the python tools repo
      # used to authenticate and validate the PR
      - name: checkout python tools repo
        uses: actions/checkout@v3
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          repository: 'Testing-Forecast-Actions/Testing-Tools'
          ref: 'main'
          path: tools


      - name: testing tools execution
        run: ls -all tools

      - name: Find pull request
        id: find-pull-request
        uses: juliangruber/find-pull-request-action@v1
        with:
          branch: main
          
      - run: echo "Pull Request ${number} (${sha})"
        env:
          number: ${{ steps.find-pull-request.outputs.number }}
          sha: ${{ steps.find-pull-request.outputs.head-sha }}

      - name: Collect PR details
        id: collect_details
        run: |
          echo "gh_actor=${{ github.actor }}"
          echo "pr_number=${{ github.event.pull_request.number }}" >> $GITHUB_OUTPUT
          
      - name: Get changes
        id: get_changed_files
        uses: tj-actions/changed-files@v36
        
        # Debug only step
      - name: List all changed files
        run: |
          for file in ${{ steps.get_changed_files.outputs.all_changed_files }}; do
            echo "$file was changed"
          done
          
      # Authenticate the pull_request 
      - name: Execute Authentication script
        id: authenticate
        env:
          calling_actor: ${{ github.actor }}
          changed_files: ${{ steps.get_changed_files.outputs.all_changed_files }}
          # local_test_var: "MyLocalValue"
          # calling_actor: ${{ steps.collect_details.outputs.gh_actor }}
          # changed_files: ${{ steps.get_changed_files.outputs.all_changed_files }}
          
        run: python ./tools/.github/scripts/request_authentication/authenticate_request.py
        
      # Debug only step
      - name: Trace execution
        run: |
          echo "authentication result: ${{ steps.authenticate.outputs.authentication }}"

      # If authenticated proceed with validation
      - name: Execute Validation script
        id: validate
        if: ${{ steps.authenticate.outputs.authentication == 'true' }}        
        env:
          changed_files: ${{ steps.get_changed_files.outputs.all_changed_files }}
          
        run: python ./tools/.github/scripts/forecast_validation/validate.py

      # If validation ok - approve pull request 
      # - name: Approve Pull Request
      #   if: ${{ steps.validate.outputs.validation == 'true' }}
      #   uses: juliangruber/approve-pull-request-action@v2.0.0
      #   with:
      #     github-token: ${{ secrets.GITHUB_TOKEN }}
      #     number: ${{ github.event.pull_request.number }}

      - name: DEBUG - DUMP INFO
        run: |
          echo ">>> POST APPROVE "
          echo ">>> Repo: ${{ github.repository }}"
          echo ">>> SrcPath: $GITHUB_WORKSPACE"
          echo ">>> Pull request number: ${{ github.event.pull_request.number }}"
          echo ">>> Git hub actor: ${{ github.actor }}"

      - name: Merge Pull Request
        if: ${{ steps.validate.outputs.validation == 'true' }}
        uses: juliangruber/merge-pull-request-action@v1
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          number: ${{ github.event.pull_request.number }}
          method: squash # merge rebase
          repo: juliangruber/octokit-action
        
